ÿ
aD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\ShopIdentityDbContext.cs
	namespace 	
BusinessObject
 
{ 
public 

class !
ShopIdentityDbContext &
:' (
IdentityDbContext) :
{ 
public !
ShopIdentityDbContext $
($ %
DbContextOptions% 5
<5 6!
ShopIdentityDbContext6 K
>K L
optionsM T
)T U
: 
base 
( 
options 
) 
{ 	
}
 
}		 
}

 µ$
YD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\ShopDbContext.cs
	namespace 	
BusinessObject
 
{ 
public 

partial 
class 
ShopDbContext &
:' (
	DbContext) 2
{ 
public 
DbSet 
< 
Category 
> 

Categories )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
DbSet 
< 
Order 
> 
Orders "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
Product 
> 
Products &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
OrderDetail  
>  !
OrderDetails" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public		 
DbSet		 
<		 
Account		 
>		 
Accounts		 &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
public

 
DbSet

 
<

 
Notification

 !
>

! "
Notifications

# 0
{

1 2
get

3 6
;

6 7
set

8 ;
;

; <
}

= >
public 
DbSet 
< 
Comment 
> 
Comments &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
if 
( 
! 
optionsBuilder 
.  
IsConfigured  ,
), -
{ !
IConfigurationBuilder %
builder& -
=. /
new0 3 
ConfigurationBuilder4 H
(H I
)I J
. 
SetBasePath 
( 
	Directory "
." #
GetCurrentDirectory# 6
(6 7
)7 8
)8 9
. 
AddJsonFile 
( 
$str +
,+ ,
optional- 5
:5 6
true7 ;
,; <
reloadOnChange= K
:K L
trueM Q
)Q R
;R S
IConfigurationRoot "
configuration# 0
=1 2
builder3 :
.: ;
Build; @
(@ A
)A B
;B C
optionsBuilder 
. 
UseSqlServer +
(+ ,
configuration, 9
.9 :
GetConnectionString: M
(M N
$strN W
)W X
)X Y
;Y Z
} 
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
OrderDetail  +
>+ ,
(, -
)- .
. 
HasKey 
( 
od 
=> 
new 
{ 
od 
. 
OrderId "
," #
od$ &
.& '
	ProductId' 0
}1 2
)2 3
;3 4
modelBuilder 
. 
Entity 
<  
Notification  ,
>, -
(- .
). /
. 
HasOne 
( 
n 
=> 
n 
. 
User #
)# $
. 
WithMany 
( 
u 
=> 
u  
.  !
Notifications! .
). /
. 
HasForeignKey 
( 
n  
=>! #
n$ %
.% &
UserID& ,
), -
;- ."
OnModelCreatingPartial   "
(  " #
modelBuilder  # /
)  / 0
;  0 1
}!! 	
partial"" 
void"" "
OnModelCreatingPartial"" +
(""+ ,
ModelBuilder"", 8
modelBuilder""9 E
)""E F
;""F G
}## 
}$$ Ñ
SD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\Product.cs
	namespace 	
BusinessObject
 
{ 
public 

partial 
class 
Product  
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
	ProductId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public		 
string		 
ProductName		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 
string

 
ProductImage

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
decimal 
	UnitPrice  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
QuantityPerUnit "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
virtual 
Category 
?  

Categories! +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
virtual 
ICollection "
<" #
OrderDetail# .
>. /
?/ 0
OrderDetails1 =
{> ?
get@ C
;C D
setE H
;H I
}J K
public 
virtual 
ICollection "
<" #
Comment# *
>* +
?+ ,
Comments- 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} Ð
WD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\OrderDetail.cs
	namespace 	
BusinessObject
 
{ 
public 

partial 
class 
OrderDetail $
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
OrderId 
{ 
get  
;  !
set" %
;% &
}' (
public		 
int		 
	ProductId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
decimal

 
	UnitPrice

  
{

! "
get

# &
;

& '
set

( +
;

+ ,
}

- .
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
virtual 
Product 
? 
Product  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
virtual 
Order 
? 
Order #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} Ò
QD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\Order.cs
	namespace 	
BusinessObject
 
{ 
public 

partial 
class 
Order 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
OrderId 
{ 
get  
;  !
set" %
;% &
}' (
public		 
int		 
?		 

CustomerId		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
DateTime

 
	OrderDate

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
DateTime 
? 
ShippedDate $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
decimal 
? 
Freight 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
ShipAddress !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
byte 
Status 
{ 
get  
;  !
set" %
;% &
}' (
public 
virtual 
ICollection "
<" #
OrderDetail# .
>. /
?/ 0
OrderDetails1 =
{> ?
get@ C
;C D
setE H
;H I
}J K
} 
} Ó
XD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\Notification.cs
	namespace 	
BusinessObject
 
{ 
public 

class 
Notification 
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 
NotificationID !
{" #
get$ '
;' (
set) ,
;, -
}. /
public		 
int		 
UserID		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public

 
string

 
Title

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
string 
Photo 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
MessageContent $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
NotificationDate (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
DateTime9 A
.A B
NowB E
;E F
public 
bool 
IsRead 
{ 
get  
;  !
set" %
;% &
}' (
=) *
false+ 0
;0 1
public 
virtual 
Account 
User #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} ØÛ
nD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\Migrations\20241024094942_Initial3.cs
	namespace 	
BusinessObject
 
. 

Migrations #
{ 
public		 

partial		 
class		 
Initial3		 !
:		" #
	Migration		$ -
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str  
,  !
columns 
: 
table 
=> !
new" %
{ 
	AccountID 
= 
table  %
.% &
Column& ,
<, -
int- 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
falseI N
)N O
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Photo 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
UserName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
FullName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
Phone 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
Type 
= 
table  
.  !
Column! '
<' (
byte( ,
>, -
(- .
type. 2
:2 3
$str4 =
,= >
nullable? G
:G H
falseI N
)N O
,O P
Status 
= 
table "
." #
Column# )
<) *
byte* .
>. /
(/ 0
type0 4
:4 5
$str6 ?
,? @
nullableA I
:I J
falseK P
)P Q
,Q R
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
Address 
= 
table #
.# $
Column$ *
<* +
string+ 1
>1 2
(2 3
type3 7
:7 8
$str9 H
,H I
nullableJ R
:R S
trueT X
)X Y
} 
, 
constraints 
: 
table "
=># %
{ 
table   
.   

PrimaryKey   $
(  $ %
$str  % 2
,  2 3
x  4 5
=>  6 8
x  9 :
.  : ;
	AccountID  ; D
)  D E
;  E F
}!! 
)!! 
;!! 
migrationBuilder## 
.## 
CreateTable## (
(##( )
name$$ 
:$$ 
$str$$ "
,$$" #
columns%% 
:%% 
table%% 
=>%% !
new%%" %
{&& 

CategoryId'' 
=''  
table''! &
.''& '
Column''' -
<''- .
int''. 1
>''1 2
(''2 3
type''3 7
:''7 8
$str''9 >
,''> ?
nullable''@ H
:''H I
false''J O
)''O P
.(( 

Annotation(( #
(((# $
$str(($ 8
,((8 9
$str((: @
)((@ A
,((A B
CategoryName))  
=))! "
table))# (
.))( )
Column))) /
<))/ 0
string))0 6
>))6 7
())7 8
type))8 <
:))< =
$str))> M
,))M N
nullable))O W
:))W X
true))Y ]
)))] ^
}** 
,** 
constraints++ 
:++ 
table++ "
=>++# %
{,, 
table-- 
.-- 

PrimaryKey-- $
(--$ %
$str--% 4
,--4 5
x--6 7
=>--8 :
x--; <
.--< =

CategoryId--= G
)--G H
;--H I
}.. 
).. 
;.. 
migrationBuilder00 
.00 
CreateTable00 (
(00( )
name11 
:11 
$str11 %
,11% &
columns22 
:22 
table22 
=>22 !
new22" %
{33 
NotificationID44 "
=44# $
table44% *
.44* +
Column44+ 1
<441 2
int442 5
>445 6
(446 7
type447 ;
:44; <
$str44= B
,44B C
nullable44D L
:44L M
false44N S
)44S T
.55 

Annotation55 #
(55# $
$str55$ 8
,558 9
$str55: @
)55@ A
,55A B
UserID66 
=66 
table66 "
.66" #
Column66# )
<66) *
int66* -
>66- .
(66. /
type66/ 3
:663 4
$str665 :
,66: ;
nullable66< D
:66D E
false66F K
)66K L
,66L M
Title77 
=77 
table77 !
.77! "
Column77" (
<77( )
string77) /
>77/ 0
(770 1
type771 5
:775 6
$str777 F
,77F G
nullable77H P
:77P Q
true77R V
)77V W
,77W X
Photo88 
=88 
table88 !
.88! "
Column88" (
<88( )
string88) /
>88/ 0
(880 1
type881 5
:885 6
$str887 F
,88F G
nullable88H P
:88P Q
true88R V
)88V W
,88W X
MessageContent99 "
=99# $
table99% *
.99* +
Column99+ 1
<991 2
string992 8
>998 9
(999 :
type99: >
:99> ?
$str99@ O
,99O P
nullable99Q Y
:99Y Z
true99[ _
)99_ `
,99` a
NotificationDate:: $
=::% &
table::' ,
.::, -
Column::- 3
<::3 4
DateTime::4 <
>::< =
(::= >
type::> B
:::B C
$str::D O
,::O P
nullable::Q Y
:::Y Z
false::[ `
)::` a
,::a b
IsRead;; 
=;; 
table;; "
.;;" #
Column;;# )
<;;) *
bool;;* .
>;;. /
(;;/ 0
type;;0 4
:;;4 5
$str;;6 ;
,;;; <
nullable;;= E
:;;E F
false;;G L
);;L M
}<< 
,<< 
constraints== 
:== 
table== "
=>==# %
{>> 
table?? 
.?? 

PrimaryKey?? $
(??$ %
$str??% 7
,??7 8
x??9 :
=>??; =
x??> ?
.??? @
NotificationID??@ N
)??N O
;??O P
table@@ 
.@@ 

ForeignKey@@ $
(@@$ %
nameAA 
:AA 
$strAA @
,AA@ A
columnBB 
:BB 
xBB  !
=>BB" $
xBB% &
.BB& '
UserIDBB' -
,BB- .
principalTableCC &
:CC& '
$strCC( 2
,CC2 3
principalColumnDD '
:DD' (
$strDD) 4
,DD4 5
onDeleteEE  
:EE  !
ReferentialActionEE" 3
.EE3 4
CascadeEE4 ;
)EE; <
;EE< =
}FF 
)FF 
;FF 
migrationBuilderHH 
.HH 
CreateTableHH (
(HH( )
nameII 
:II 
$strII 
,II 
columnsJJ 
:JJ 
tableJJ 
=>JJ !
newJJ" %
{KK 
OrderIdLL 
=LL 
tableLL #
.LL# $
ColumnLL$ *
<LL* +
intLL+ .
>LL. /
(LL/ 0
typeLL0 4
:LL4 5
$strLL6 ;
,LL; <
nullableLL= E
:LLE F
falseLLG L
)LLL M
.MM 

AnnotationMM #
(MM# $
$strMM$ 8
,MM8 9
$strMM: @
)MM@ A
,MMA B

CustomerIdNN 
=NN  
tableNN! &
.NN& '
ColumnNN' -
<NN- .
intNN. 1
>NN1 2
(NN2 3
typeNN3 7
:NN7 8
$strNN9 >
,NN> ?
nullableNN@ H
:NNH I
trueNNJ N
)NNN O
,NNO P
	OrderDateOO 
=OO 
tableOO  %
.OO% &
ColumnOO& ,
<OO, -
DateTimeOO- 5
>OO5 6
(OO6 7
typeOO7 ;
:OO; <
$strOO= H
,OOH I
nullableOOJ R
:OOR S
falseOOT Y
)OOY Z
,OOZ [
ShippedDatePP 
=PP  !
tablePP" '
.PP' (
ColumnPP( .
<PP. /
DateTimePP/ 7
>PP7 8
(PP8 9
typePP9 =
:PP= >
$strPP? J
,PPJ K
nullablePPL T
:PPT U
truePPV Z
)PPZ [
,PP[ \
FreightQQ 
=QQ 
tableQQ #
.QQ# $
ColumnQQ$ *
<QQ* +
decimalQQ+ 2
>QQ2 3
(QQ3 4
typeQQ4 8
:QQ8 9
$strQQ: I
,QQI J
nullableQQK S
:QQS T
trueQQU Y
)QQY Z
,QQZ [
ShipAddressRR 
=RR  !
tableRR" '
.RR' (
ColumnRR( .
<RR. /
stringRR/ 5
>RR5 6
(RR6 7
typeRR7 ;
:RR; <
$strRR= L
,RRL M
nullableRRN V
:RRV W
trueRRX \
)RR\ ]
,RR] ^
StatusSS 
=SS 
tableSS "
.SS" #
ColumnSS# )
<SS) *
byteSS* .
>SS. /
(SS/ 0
typeSS0 4
:SS4 5
$strSS6 ?
,SS? @
nullableSSA I
:SSI J
falseSSK P
)SSP Q
,SSQ R
	AccountIDTT 
=TT 
tableTT  %
.TT% &
ColumnTT& ,
<TT, -
intTT- 0
>TT0 1
(TT1 2
typeTT2 6
:TT6 7
$strTT8 =
,TT= >
nullableTT? G
:TTG H
trueTTI M
)TTM N
}UU 
,UU 
constraintsVV 
:VV 
tableVV "
=>VV# %
{WW 
tableXX 
.XX 

PrimaryKeyXX $
(XX$ %
$strXX% 0
,XX0 1
xXX2 3
=>XX4 6
xXX7 8
.XX8 9
OrderIdXX9 @
)XX@ A
;XXA B
tableYY 
.YY 

ForeignKeyYY $
(YY$ %
nameZZ 
:ZZ 
$strZZ <
,ZZ< =
column[[ 
:[[ 
x[[  !
=>[[" $
x[[% &
.[[& '
	AccountID[[' 0
,[[0 1
principalTable\\ &
:\\& '
$str\\( 2
,\\2 3
principalColumn]] '
:]]' (
$str]]) 4
)]]4 5
;]]5 6
}^^ 
)^^ 
;^^ 
migrationBuilder`` 
.`` 
CreateTable`` (
(``( )
nameaa 
:aa 
$straa  
,aa  !
columnsbb 
:bb 
tablebb 
=>bb !
newbb" %
{cc 
	ProductIddd 
=dd 
tabledd  %
.dd% &
Columndd& ,
<dd, -
intdd- 0
>dd0 1
(dd1 2
typedd2 6
:dd6 7
$strdd8 =
,dd= >
nullabledd? G
:ddG H
falseddI N
)ddN O
.ee 

Annotationee #
(ee# $
$stree$ 8
,ee8 9
$stree: @
)ee@ A
,eeA B

CategoryIdff 
=ff  
tableff! &
.ff& '
Columnff' -
<ff- .
intff. 1
>ff1 2
(ff2 3
typeff3 7
:ff7 8
$strff9 >
,ff> ?
nullableff@ H
:ffH I
falseffJ O
)ffO P
,ffP Q
ProductNamegg 
=gg  !
tablegg" '
.gg' (
Columngg( .
<gg. /
stringgg/ 5
>gg5 6
(gg6 7
typegg7 ;
:gg; <
$strgg= L
,ggL M
nullableggN V
:ggV W
trueggX \
)gg\ ]
,gg] ^
ProductImagehh  
=hh! "
tablehh# (
.hh( )
Columnhh) /
<hh/ 0
stringhh0 6
>hh6 7
(hh7 8
typehh8 <
:hh< =
$strhh> M
,hhM N
nullablehhO W
:hhW X
truehhY ]
)hh] ^
,hh^ _
	UnitPriceii 
=ii 
tableii  %
.ii% &
Columnii& ,
<ii, -
decimalii- 4
>ii4 5
(ii5 6
typeii6 :
:ii: ;
$strii< K
,iiK L
nullableiiM U
:iiU V
falseiiW \
)ii\ ]
,ii] ^
QuantityPerUnitjj #
=jj$ %
tablejj& +
.jj+ ,
Columnjj, 2
<jj2 3
intjj3 6
>jj6 7
(jj7 8
typejj8 <
:jj< =
$strjj> C
,jjC D
nullablejjE M
:jjM N
falsejjO T
)jjT U
}kk 
,kk 
constraintsll 
:ll 
tablell "
=>ll# %
{mm 
tablenn 
.nn 

PrimaryKeynn $
(nn$ %
$strnn% 2
,nn2 3
xnn4 5
=>nn6 8
xnn9 :
.nn: ;
	ProductIdnn; D
)nnD E
;nnE F
tableoo 
.oo 

ForeignKeyoo $
(oo$ %
namepp 
:pp 
$strpp A
,ppA B
columnqq 
:qq 
xqq  !
=>qq" $
xqq% &
.qq& '

CategoryIdqq' 1
,qq1 2
principalTablerr &
:rr& '
$strrr( 4
,rr4 5
principalColumnss '
:ss' (
$strss) 5
,ss5 6
onDeletett  
:tt  !
ReferentialActiontt" 3
.tt3 4
Cascadett4 ;
)tt; <
;tt< =
}uu 
)uu 
;uu 
migrationBuilderww 
.ww 
CreateTableww (
(ww( )
namexx 
:xx 
$strxx  
,xx  !
columnsyy 
:yy 
tableyy 
=>yy !
newyy" %
{zz 
Id{{ 
={{ 
table{{ 
.{{ 
Column{{ %
<{{% &
int{{& )
>{{) *
({{* +
type{{+ /
:{{/ 0
$str{{1 6
,{{6 7
nullable{{8 @
:{{@ A
false{{B G
){{G H
.|| 

Annotation|| #
(||# $
$str||$ 8
,||8 9
$str||: @
)||@ A
,||A B
UserId}} 
=}} 
table}} "
.}}" #
Column}}# )
<}}) *
int}}* -
>}}- .
(}}. /
type}}/ 3
:}}3 4
$str}}5 :
,}}: ;
nullable}}< D
:}}D E
true}}F J
)}}J K
,}}K L
	ProductId~~ 
=~~ 
table~~  %
.~~% &
Column~~& ,
<~~, -
int~~- 0
>~~0 1
(~~1 2
type~~2 6
:~~6 7
$str~~8 =
,~~= >
nullable~~? G
:~~G H
true~~I M
)~~M N
,~~N O
CommentText 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
falseX ]
)] ^
,^ _
Rate
 
=
 
table
  
.
  !
Column
! '
<
' (
int
( +
>
+ ,
(
, -
type
- 1
:
1 2
$str
3 8
,
8 9
nullable
: B
:
B C
true
D H
)
H I
,
I J
UserReplyId
 
=
  !
table
" '
.
' (
Column
( .
<
. /
int
/ 2
>
2 3
(
3 4
type
4 8
:
8 9
$str
: ?
,
? @
nullable
A I
:
I J
true
K O
)
O P
,
P Q
	CreatedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
,
Y Z
	UpdatedAt
 
=
 
table
  %
.
% &
Column
& ,
<
, -
DateTime
- 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= H
,
H I
nullable
J R
:
R S
true
T X
)
X Y
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 2
,
2 3
x
4 5
=>
6 8
x
9 :
.
: ;
Id
; =
)
= >
;
> ?
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 ;
,
; <
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) 4
)
4 5
;
5 6
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 @
,
@ A
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserReplyId
' 2
,
2 3
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 >
,
> ?
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
	ProductId
' 0
,
0 1
principalTable
 &
:
& '
$str
( 2
,
2 3
principalColumn
 '
:
' (
$str
) 4
)
4 5
;
5 6
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 $
,
$ %
columns
 
:
 
table
 
=>
 !
new
" %
{
 
OrderId
 
=
 
table
 #
.
# $
Column
$ *
<
* +
int
+ .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 ;
,
; <
nullable
= E
:
E F
false
G L
)
L M
,
M N
	ProductId
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
false
I N
)
N O
,
O P
	UnitPrice
 
=
 
table
  %
.
% &
Column
& ,
<
, -
decimal
- 4
>
4 5
(
5 6
type
6 :
:
: ;
$str
< K
,
K L
nullable
M U
:
U V
false
W \
)
\ ]
,
] ^
Quantity
   
=
   
table
   $
.
  $ %
Column
  % +
<
  + ,
int
  , /
>
  / 0
(
  0 1
type
  1 5
:
  5 6
$str
  7 <
,
  < =
nullable
  > F
:
  F G
false
  H M
)
  M N
}
¡¡ 
,
¡¡ 
constraints
¢¢ 
:
¢¢ 
table
¢¢ "
=>
¢¢# %
{
££ 
table
¤¤ 
.
¤¤ 

PrimaryKey
¤¤ $
(
¤¤$ %
$str
¤¤% 6
,
¤¤6 7
x
¤¤8 9
=>
¤¤: <
new
¤¤= @
{
¤¤A B
x
¤¤C D
.
¤¤D E
OrderId
¤¤E L
,
¤¤L M
x
¤¤N O
.
¤¤O P
	ProductId
¤¤P Y
}
¤¤Z [
)
¤¤[ \
;
¤¤\ ]
table
¥¥ 
.
¥¥ 

ForeignKey
¥¥ $
(
¥¥$ %
name
¦¦ 
:
¦¦ 
$str
¦¦ >
,
¦¦> ?
column
§§ 
:
§§ 
x
§§  !
=>
§§" $
x
§§% &
.
§§& '
OrderId
§§' .
,
§§. /
principalTable
¨¨ &
:
¨¨& '
$str
¨¨( 0
,
¨¨0 1
principalColumn
©© '
:
©©' (
$str
©©) 2
,
©©2 3
onDelete
ªª  
:
ªª  !
ReferentialAction
ªª" 3
.
ªª3 4
Cascade
ªª4 ;
)
ªª; <
;
ªª< =
table
«« 
.
«« 

ForeignKey
«« $
(
««$ %
name
¬¬ 
:
¬¬ 
$str
¬¬ B
,
¬¬B C
column
­­ 
:
­­ 
x
­­  !
=>
­­" $
x
­­% &
.
­­& '
	ProductId
­­' 0
,
­­0 1
principalTable
®® &
:
®®& '
$str
®®( 2
,
®®2 3
principalColumn
¯¯ '
:
¯¯' (
$str
¯¯) 4
,
¯¯4 5
onDelete
°°  
:
°°  !
ReferentialAction
°°" 3
.
°°3 4
Cascade
°°4 ;
)
°°; <
;
°°< =
}
±± 
)
±± 
;
±± 
migrationBuilder
³³ 
.
³³ 
CreateIndex
³³ (
(
³³( )
name
´´ 
:
´´ 
$str
´´ -
,
´´- .
table
µµ 
:
µµ 
$str
µµ !
,
µµ! "
column
¶¶ 
:
¶¶ 
$str
¶¶ #
)
¶¶# $
;
¶¶$ %
migrationBuilder
¸¸ 
.
¸¸ 
CreateIndex
¸¸ (
(
¸¸( )
name
¹¹ 
:
¹¹ 
$str
¹¹ *
,
¹¹* +
table
ºº 
:
ºº 
$str
ºº !
,
ºº! "
column
»» 
:
»» 
$str
»»  
)
»»  !
;
»»! "
migrationBuilder
½½ 
.
½½ 
CreateIndex
½½ (
(
½½( )
name
¾¾ 
:
¾¾ 
$str
¾¾ /
,
¾¾/ 0
table
¿¿ 
:
¿¿ 
$str
¿¿ !
,
¿¿! "
column
ÀÀ 
:
ÀÀ 
$str
ÀÀ %
)
ÀÀ% &
;
ÀÀ& '
migrationBuilder
ÂÂ 
.
ÂÂ 
CreateIndex
ÂÂ (
(
ÂÂ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ /
,
ÃÃ/ 0
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ &
,
ÄÄ& '
column
ÅÅ 
:
ÅÅ 
$str
ÅÅ  
)
ÅÅ  !
;
ÅÅ! "
migrationBuilder
ÇÇ 
.
ÇÇ 
CreateIndex
ÇÇ (
(
ÇÇ( )
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ 1
,
ÈÈ1 2
table
ÉÉ 
:
ÉÉ 
$str
ÉÉ %
,
ÉÉ% &
column
ÊÊ 
:
ÊÊ 
$str
ÊÊ #
)
ÊÊ# $
;
ÊÊ$ %
migrationBuilder
ÌÌ 
.
ÌÌ 
CreateIndex
ÌÌ (
(
ÌÌ( )
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ +
,
ÍÍ+ ,
table
ÎÎ 
:
ÎÎ 
$str
ÎÎ 
,
ÎÎ  
column
ÏÏ 
:
ÏÏ 
$str
ÏÏ #
)
ÏÏ# $
;
ÏÏ$ %
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateIndex
ÑÑ (
(
ÑÑ( )
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ .
,
ÒÒ. /
table
ÓÓ 
:
ÓÓ 
$str
ÓÓ !
,
ÓÓ! "
column
ÔÔ 
:
ÔÔ 
$str
ÔÔ $
)
ÔÔ$ %
;
ÔÔ% &
}
ÕÕ 	
	protected
ØØ 
override
ØØ 
void
ØØ 
Down
ØØ  $
(
ØØ$ %
MigrationBuilder
ØØ% 5
migrationBuilder
ØØ6 F
)
ØØF G
{
ÙÙ 	
migrationBuilder
ÚÚ 
.
ÚÚ 
	DropTable
ÚÚ &
(
ÚÚ& '
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ  
)
ÛÛ  !
;
ÛÛ! "
migrationBuilder
ÝÝ 
.
ÝÝ 
	DropTable
ÝÝ &
(
ÝÝ& '
name
ÞÞ 
:
ÞÞ 
$str
ÞÞ %
)
ÞÞ% &
;
ÞÞ& '
migrationBuilder
àà 
.
àà 
	DropTable
àà &
(
àà& '
name
áá 
:
áá 
$str
áá $
)
áá$ %
;
áá% &
migrationBuilder
ãã 
.
ãã 
	DropTable
ãã &
(
ãã& '
name
ää 
:
ää 
$str
ää 
)
ää 
;
ää  
migrationBuilder
ææ 
.
ææ 
	DropTable
ææ &
(
ææ& '
name
çç 
:
çç 
$str
çç  
)
çç  !
;
çç! "
migrationBuilder
éé 
.
éé 
	DropTable
éé &
(
éé& '
name
êê 
:
êê 
$str
êê  
)
êê  !
;
êê! "
migrationBuilder
ìì 
.
ìì 
	DropTable
ìì &
(
ìì& '
name
íí 
:
íí 
$str
íí "
)
íí" #
;
íí# $
}
îî 	
}
ïï 
}ðð Z
XD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\global_using.cs
SD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\Comment.cs
	namespace 	
BusinessObject
 
{ 
public 

class 
Comment 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
? 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Account 
? 
User 
{ 
get "
;" #
set$ '
;' (
}) *
public

 
int

 
?

 
	ProductId

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 
Product 
? 
Product 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
string 
? 
CommentText "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
Range	 
( 
$num 
, 
$num 
) 
] 
public 
int 
? 
Rate 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
? 
UserReplyId 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	

JsonIgnore	 
] 
public 
Comment 
? 
	UserReply !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
List 
< 
Comment 
> 
UserReplies (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
[ 	
DataType	 
( 
DataType 
. 
DateTime #
)# $
]$ %
public 
DateTime 
? 
	CreatedAt "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
DataType	 
( 
DataType 
. 
DateTime #
)# $
]$ %
public 
DateTime 
? 
	UpdatedAt "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} 
TD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\Category.cs
	namespace 	
BusinessObject
 
{ 
public 

partial 
class 
Category !
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public 
int 

CategoryId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
CategoryName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public

 
virtual

 
ICollection

 "
<

" #
Product

# *
>

* +
?

+ ,
Products

- 5
{

6 7
get

8 ;
;

; <
set

= @
;

@ A
}

B C
} 
} Û
SD:\FPT Course\Summer2024\PRN221\Project\New folder\a\Shop\BusinessObject\Account.cs
	namespace 	
BusinessObject
 
{ 
public 

partial 
class 
Account  
{ 
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
Identity3 ;
); <
]< =
public		 
int		 
	AccountID		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
string

 
Photo

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Phone 
{ 
get !
;! "
set# &
;& '
}( )
public 
byte 
Type 
{ 
get 
; 
set  #
;# $
}% &
public 
byte 
Status 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Address 
{ 
get  #
;# $
set% (
;( )
}* +
public 
virtual 
ICollection "
<" #
Order# (
>( )
?) *
Orders+ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
virtual 
ICollection "
<" #
Notification# /
>/ 0
?0 1
Notifications2 ?
{@ A
getB E
;E F
setG J
;J K
}L M
} 
} 